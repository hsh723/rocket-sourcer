user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME 타입
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로깅 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data: https://cdn.jsdelivr.net; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 업로드 크기 제한
    client_max_body_size 20M;
    
    # 타임아웃 설정
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # 파일 캐싱
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # 버퍼 설정
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # 레이트 리미팅
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    
    # 업스트림 서버 (PHP-FPM)
    upstream php-fpm {
        server unix:/var/run/php/php8.1-fpm.sock;
    }
    
    # 기본 서버 블록
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # HTTPS로 리다이렉트
        return 301 https://$host$request_uri;
    }
    
    # HTTPS 서버 블록 (프로덕션)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name rocketsourcer.com www.rocketsourcer.com;
        
        # SSL 설정
        ssl_certificate /etc/letsencrypt/live/rocketsourcer.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/rocketsourcer.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/rocketsourcer.com/chain.pem;
        
        # SSL 프로토콜 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        
        # SSL 세션 캐시
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # 루트 디렉토리
        root /var/www/rocketsourcer/current/public;
        index index.php index.html;
        
        # 로그 설정
        access_log /var/log/nginx/rocketsourcer.access.log;
        error_log /var/log/nginx/rocketsourcer.error.log;
        
        # 위치 블록
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # PHP 처리
        location ~ \.php$ {
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_intercept_errors on;
            fastcgi_buffer_size 16k;
            fastcgi_buffers 4 16k;
            fastcgi_connect_timeout 300;
            fastcgi_send_timeout 300;
            fastcgi_read_timeout 300;
        }
        
        # API 레이트 리미팅
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 정적 파일 캐싱
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
        
        # 헬스 체크 엔드포인트
        location /api/health {
            access_log off;
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 특정 파일 및 디렉토리 접근 제한
        location ~ /\.(?!well-known) {
            deny all;
        }
        
        location ~ /\.ht {
            deny all;
        }
    }
    
    # HTTPS 서버 블록 (스테이징)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name staging.rocketsourcer.com;
        
        # SSL 설정
        ssl_certificate /etc/letsencrypt/live/staging.rocketsourcer.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/staging.rocketsourcer.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/staging.rocketsourcer.com/chain.pem;
        
        # SSL 프로토콜 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        
        # SSL 세션 캐시
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # 루트 디렉토리
        root /var/www/rocketsourcer-staging/current/public;
        index index.php index.html;
        
        # 로그 설정
        access_log /var/log/nginx/rocketsourcer-staging.access.log;
        error_log /var/log/nginx/rocketsourcer-staging.error.log;
        
        # 위치 블록
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # PHP 처리
        location ~ \.php$ {
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_intercept_errors on;
            fastcgi_buffer_size 16k;
            fastcgi_buffers 4 16k;
            fastcgi_connect_timeout 300;
            fastcgi_send_timeout 300;
            fastcgi_read_timeout 300;
        }
        
        # API 레이트 리미팅 (스테이징에서는 더 높은 제한)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 정적 파일 캐싱
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
        }
        
        # 헬스 체크 엔드포인트
        location /api/health {
            access_log off;
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 특정 파일 및 디렉토리 접근 제한
        location ~ /\.(?!well-known) {
            deny all;
        }
        
        location ~ /\.ht {
            deny all;
        }
        
        # 기본 인증 (스테이징 환경 보호)
        auth_basic "Restricted Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
    
    # 블루-그린 배포를 위한 설정
    # 블루 환경
    server {
        listen 8080;
        server_name rocketsourcer.com;
        
        root /var/www/rocketsourcer/blue/public;
        index index.php index.html;
        
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        location ~ \.php$ {
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }
    
    # 그린 환경
    server {
        listen 8081;
        server_name rocketsourcer.com;
        
        root /var/www/rocketsourcer/green/public;
        index index.php index.html;
        
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        location ~ \.php$ {
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }
    
    # 카나리 배포를 위한 설정
    # 카나리 환경
    server {
        listen 8082;
        server_name rocketsourcer.com;
        
        root /var/www/rocketsourcer/canary/public;
        index index.php index.html;
        
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        location ~ \.php$ {
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }
    
    # 기타 가상 호스트 설정 포함
    include /etc/nginx/conf.d/*.conf;
}